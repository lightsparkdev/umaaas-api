openapi: 3.0.3
info:
  title: UMA as a Service (UMAaas) API
  description: |
    API for managing global payments to and from UMA addresses. 
    This service facilitates cross-currency financial transactions using simple human-readable UMA addresses.
  version: 1.0.0
  contact:
    name: Lightspark Support
    email: support@lightspark.com

servers:
  - url: https://api.lightspark.com/umaas/v1
    description: Production server

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
      description: API token authentication using format <api token id>:<api client secret>

  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        details:
          type: object
          description: Additional error details

    Address:
      type: object
      properties:
        line1:
          type: string
          description: Street address line 1
          example: "123 Main Street"
        line2:
          type: string
          description: Street address line 2
          example: "Apt 4B"
        city:
          type: string
          description: City
          example: "San Francisco"
        state:
          type: string
          description: State/Province/Region
          example: "CA"
        postalCode:
          type: string
          description: Postal/ZIP code
          example: "94105"
        country:
          type: string
          description: Country code (ISO 3166-1 alpha-2)
          example: "US"

    BankAccountInfo:
      type: object
      properties:
        accountType:
          type: string
          enum: [CLABE, US_ACCOUNT, PIX, IBAN, OTHER]
          description: Type of bank account information
          example: "US_ACCOUNT"
        data:
          type: object
          description: Flexible structure based on accountType
          additionalProperties: true
          example:
            accountNumber: "123456789"
            routingNumber: "987654321"
            accountHolderName: "John Doe"

    User:
      type: object
      required:
        - umaAddress
        - platformUserId
        - userType
      properties:
        id:
          type: string
          description: System-generated unique identifier
          readOnly: true
          example: "usr_12345678"
        umaAddress:
          type: string
          description: full UMA address
          example: "$john.doe@uma.domain.com"
        platformUserId:
          type: string
          description: Platform-specific user identifier
          example: "platform_user_123"
        userType:
          type: string
          enum: [INDIVIDUAL, BUSINESS]
          description: Whether the user is an individual or a business entity
          example: "INDIVIDUAL"
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
          readOnly: true
          example: "2023-07-21T17:32:28Z"
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
          readOnly: true
          example: "2023-07-21T17:32:28Z"
      discriminator:
        propertyName: userType
        mapping:
          INDIVIDUAL: '#/components/schemas/IndividualUser'
          BUSINESS: '#/components/schemas/BusinessUser'

    IndividualUser:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          required:
            - fullName
            - dateOfBirth
            - address
            - bankAccountInfo
          properties:
            fullName:
              type: string
              description: Individual's full name
              example: "John Michael Doe"
            dateOfBirth:
              type: string
              format: date
              description: Date of birth in ISO 8601 format (YYYY-MM-DD)
              example: "1990-01-15"
            address:
              $ref: '#/components/schemas/Address'
            bankAccountInfo:
              $ref: '#/components/schemas/BankAccountInfo'

    BusinessUser:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          required:
            - businessInfo
            - address
            - bankAccountInfo
          properties:
            address:
              $ref: '#/components/schemas/Address'
            bankAccountInfo:
              $ref: '#/components/schemas/BankAccountInfo'
            businessInfo:
              type: object
              required:
                - legalName
              description: Additional information required for business entities
              properties:
                legalName:
                  type: string
                  description: Legal name of the business
                  example: "Acme Corporation, Inc."
                registrationNumber:
                  type: string
                  description: Business registration number
                  example: "BRN-123456789"
                taxId:
                  type: string
                  description: Tax identification number
                  example: "EIN-987654321"

    CounterpartyFieldDefinition:
      type: object
      properties:
        name:
          type: string
          enum: [FULL_NAME, ADDRESS, DATE_OF_BIRTH, TAX_ID, REGISTRATION_NUMBER, ACCOUNT_NUMBER]
          description: Name of the counterparty field
          example: "FULL_NAME"
        mandatory:
          type: boolean
          description: Whether the field is mandatory
          example: true

    PlatformConfig:
      type: object
      properties:
        id:
          type: string
          description: System-generated unique identifier
          readOnly: true
          example: "cfg_87654321"
        umaDomain:
          type: string
          description: UMA domain for this platform
          example: "platform.uma.domain"
        requiredCounterpartyFields:
          type: array
          items:
            $ref: '#/components/schemas/CounterpartyFieldDefinition'
          description: List of counterparty fields and their requirements
          example:
            - name: "FULL_NAME"
              mandatory: true
            - name: "DATE_OF_BIRTH"
              mandatory: true
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp
          readOnly: true
          example: "2023-06-15T12:30:45Z"
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
          readOnly: true
          example: "2023-06-15T12:30:45Z"

paths:
  /users:
    post:
      summary: Add a new user
      description: Register a new user in the system with UMA address and bank account information
      tags:
        - Users
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/IndividualUser'
                - $ref: '#/components/schemas/BusinessUser'
            examples:
              individualUser:
                summary: Create individual user example
                value:
                  umaAddress: "$jane.doe@uma.domain.com"
                  platformUserId: "platform_user_456"
                  userType: "INDIVIDUAL"
                  fullName: "Jane Doe"
                  dateOfBirth: "1992-03-25"
                  address:
                    line1: "123 Pine Street"
                    line2: "Unit 501"
                    city: "Seattle"
                    state: "WA"
                    postalCode: "98101"
                    country: "US"
                  bankAccountInfo:
                    accountType: "US_ACCOUNT"
                    data:
                      accountNumber: "123498765"
                      routingNumber: "321456789"
                      accountHolderName: "Jane Doe"
              businessUser:
                summary: Create business user example
                value:
                  umaAddress: "$acme@uma.domain.com"
                  platformUserId: "platform_biz_789"
                  userType: "BUSINESS"
                  businessInfo:
                    legalName: "Acme Corporation"
                    registrationNumber: "BRN-456789123"
                    taxId: "EIN-987123456"
                  address:
                    line1: "400 Commerce Way"
                    city: "Austin"
                    state: "TX"
                    postalCode: "78701"
                    country: "US"
                  bankAccountInfo:
                    accountType: "US_ACCOUNT"
                    data:
                      accountNumber: "987123456"
                      routingNumber: "789123456"
                      accountHolderName: "Acme Corporation"
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IndividualUser'
                  - $ref: '#/components/schemas/BusinessUser'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Conflict - User with the UMA address or platform user ID already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/{userId}:
    parameters:
      - name: userId
        in: path
        description: System-generated unique user identifier
        required: true
        schema:
          type: string
    get:
      summary: Get user by ID
      description: Retrieve a user by their system-generated ID
      tags:
        - Users
      security:
        - BasicAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IndividualUser'
                  - $ref: '#/components/schemas/BusinessUser'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Update user by ID
      description: Update a user's metadata by their system-generated ID
      tags:
        - Users
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    userType:
                      type: string
                      enum: [INDIVIDUAL]
                      description: Update user type to individual
                    fullName:
                      type: string
                      description: Individual's full name
                    dateOfBirth:
                      type: string
                      format: date
                      description: Date of birth in ISO 8601 format (YYYY-MM-DD)
                    address:
                      $ref: '#/components/schemas/Address'
                    bankAccountInfo:
                      $ref: '#/components/schemas/BankAccountInfo'
                - type: object
                  properties:
                    userType:
                      type: string
                      enum: [BUSINESS]
                      description: Update user type to business
                    businessInfo:
                      type: object
                      properties:
                        legalName:
                          type: string
                          description: Legal name of the business
                        registrationNumber:
                          type: string
                          description: Business registration number
                        taxId:
                          type: string
                          description: Tax identification number
                    address:
                      $ref: '#/components/schemas/Address'
                    bankAccountInfo:
                      $ref: '#/components/schemas/BankAccountInfo'
            examples:
              individualUpdate:
                summary: Update individual user example
                value:
                  userType: "INDIVIDUAL"
                  fullName: "John Smith"
                  dateOfBirth: "1985-06-15"
                  address:
                    line1: "456 Market St"
                    city: "San Francisco"
                    state: "CA"
                    postalCode: "94103"
                    country: "US"
                  bankAccountInfo:
                    accountType: "US_ACCOUNT"
                    data:
                      accountNumber: "987654321"
                      routingNumber: "123456789"
              businessUpdate:
                summary: Update business user example
                value:
                  userType: "BUSINESS"
                  businessInfo:
                    legalName: "New Tech Solutions LLC"
                    registrationNumber: "BRN-987654321"
                    taxId: "EIN-123456789"
                  address:
                    line1: "100 Technology Parkway"
                    city: "Palo Alto"
                    state: "CA"
                    postalCode: "94304"
                    country: "US"
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IndividualUser'
                  - $ref: '#/components/schemas/BusinessUser'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /users/by-platform-id/{platformUserId}:
    parameters:
      - name: platformUserId
        in: path
        description: Platform-specific user identifier
        required: true
        schema:
          type: string
    get:
      summary: Get user by platform user ID
      description: Retrieve a user by their platform-specific ID
      tags:
        - Users
      security:
        - BasicAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IndividualUser'
                  - $ref: '#/components/schemas/BusinessUser'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Update user by platform user ID
      description: Update a user's metadata by their platform-specific ID
      tags:
        - Users
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    userType:
                      type: string
                      enum: [INDIVIDUAL]
                      description: Update user type to individual
                    fullName:
                      type: string
                      description: Individual's full name
                    dateOfBirth:
                      type: string
                      format: date
                      description: Date of birth in ISO 8601 format (YYYY-MM-DD)
                    address:
                      $ref: '#/components/schemas/Address'
                    bankAccountInfo:
                      $ref: '#/components/schemas/BankAccountInfo'
                - type: object
                  properties:
                    userType:
                      type: string
                      enum: [BUSINESS]
                      description: Update user type to business
                    businessInfo:
                      type: object
                      properties:
                        legalName:
                          type: string
                          description: Legal name of the business
                        registrationNumber:
                          type: string
                          description: Business registration number
                        taxId:
                          type: string
                          description: Tax identification number
                    address:
                      $ref: '#/components/schemas/Address'
                    bankAccountInfo:
                      $ref: '#/components/schemas/BankAccountInfo'
            examples:
              individualUpdate:
                summary: Update individual user example
                value:
                  userType: "INDIVIDUAL"
                  fullName: "Jane Smith"
                  address:
                    line1: "789 Broadway"
                    city: "New York"
                    state: "NY"
                    postalCode: "10003"
                    country: "US"
              businessUpdate:
                summary: Update business user example
                value:
                  userType: "BUSINESS"
                  businessInfo:
                    legalName: "Global Enterprises Inc."
                    taxId: "EIN-987654321"
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IndividualUser'
                  - $ref: '#/components/schemas/BusinessUser'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /config:
    get:
      summary: Get platform configuration
      description: Retrieve the current platform configuration
      tags:
        - Configuration
      security:
        - BasicAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformConfig'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update platform configuration
      description: Update the platform configuration settings
      tags:
        - Configuration
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                umaDomain:
                  type: string
                  example: "mycompany.com"
                requiredCounterpartyFields:
                  type: array
                  items:
                    $ref: '#/components/schemas/CounterpartyFieldDefinition'
            example:
              umaDomain: "mycompany.com"
              requiredCounterpartyFields:
                - name: "FULL_NAME"
                  mandatory: true
                - name: "ADDRESS"
                  mandatory: true
                - name: "DATE_OF_BIRTH"
                  mandatory: true
                - name: "TAX_ID"
                  mandatory: false
      responses:
        '200':
          description: Configuration updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformConfig'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

security:
  - BasicAuth: [] 