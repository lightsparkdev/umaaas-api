get:
  summary: List quotes
  description: >
    Retrieve a list of quotes with optional filtering parameters. Returns all
    quotes that match the specified filters. If no filters are provided, returns all quotes
    (paginated).
  operationId: listGridQuotes
  tags:
    - Sending Payments
  security:
    - BasicAuth: []
  parameters:
    - name: userId
      in: query
      description: Filter by user ID
      required: false
      schema:
        type: string
    - name: status
      in: query
      description: Filter by quote status
      required: false
      schema:
        type: string
        enum:
          - PENDING
          - CONFIRMED
          - EXPIRED
          - FAILED
    - name: createdAfter
      in: query
      description: Filter quotes created after this timestamp (inclusive)
      required: false
      schema:
        type: string
        format: date-time
    - name: createdBefore
      in: query
      description: Filter quotes created before this timestamp (inclusive)
      required: false
      schema:
        type: string
        format: date-time
    - name: limit
      in: query
      description: Maximum number of results to return (default 20, max 100)
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    - name: cursor
      in: query
      description: Cursor for pagination (returned from previous request)
      required: false
      schema:
        type: string
    - name: sortOrder
      in: query
      description: Order to sort results in
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc
  responses:
    '200':
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
              - data
              - hasMore
            properties:
              data:
                type: array
                description: List of quotes matching the criteria
                items:
                  $ref: ../../components/schemas/quotes/GridQuote.yaml
              hasMore:
                type: boolean
                description: Indicates if more results are available beyond this page
              nextCursor:
                type: string
                description: >-
                  Cursor to retrieve the next page of results (only present if
                  hasMore is true)
              totalCount:
                type: integer
                description: >-
                  Total number of quotes matching the criteria (excluding
                  pagination)
    '400':
      description: Bad request - Invalid parameters
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error400.yaml
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error401.yaml
    '500':
      description: Internal service error
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error500.yaml
post:
  summary: Create a quote
  description: >
    Lock in a quote for transferring funds between a source account and destination account
    with currency exchange. This endpoint is specifically for cross-currency transfers where
    the source and destination accounts have different currencies.
    

    **Important:** If you are transferring funds in the same currency (no exchange required), use the `/transfer-in`
    or `/transfer-out` endpoints instead.
    
  operationId: createGridQuote
  tags:
    - Sending Payments
  security:
    - BasicAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - userId
            - source
            - destination
            - amount
          properties:
            userId:
              type: string
              description: The ID of the user initiating the transfer
              example: User:019542f5-b3e7-1d02-0000-000000000001
            source:
              type: object
              required:
                - account_id
                - currency
              properties:
                account_id:
                  type: string
                  description: Source account identifier
                  example: e85dcbd6-dced-4ec4-b756-3c3a9ea3d965
                currency:
                  type: string
                  description: Currency code for the source account
                  example: USD
              description: Source account details
            destination:
              type: object
              required:
                - account_id
                - currency
              properties:
                account_id:
                  type: string
                  description: Destination account identifier
                  example: a12dcbd6-dced-4ec4-b756-3c3a9ea3d123
                currency:
                  type: string
                  description: Currency code for the destination account
                  example: EUR
              description: Destination account details
            amount:
              type: integer
              format: int64
              description: >-
                The amount to transfer in the smallest unit of the source currency (eg. cents)
              exclusiveMinimum: 0
              maximum: 9000000000000000
              example: 10000
        examples:
          usdToEur:
            summary: USD to EUR transfer
            value:
              userId: User:019542f5-b3e7-1d02-0000-000000000001
              source:
                account_id: e85dcbd6-dced-4ec4-b756-3c3a9ea3d965
                currency: USD
              destination:
                account_id: a12dcbd6-dced-4ec4-b756-3c3a9ea3d123
                currency: EUR
              amount: 10000
  responses:
    '201':
      description: >
        Quote created successfully. The response includes all input details along with
        
        rate_details containing the exchange rate and fee breakdown.
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/quotes/GridQuote.yaml
    '400':
      description: Bad request - Missing or invalid parameters
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error400.yaml
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error401.yaml
    '404':
      description: User or account not found
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error404.yaml
    '500':
      description: Internal service error
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error500.yaml
    '501':
      description: Not implemented
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error501.yaml

