post:
  summary: Add a new customer
  description: >-
    Register a new customer in the system with an account identifier and bank account
    information
  operationId: createUser
  tags:
    - Customers
  security:
    - BasicAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          oneOf:
            - title: Individual Customer
              allOf:
                - $ref: ../../components/schemas/users/IndividualUserUpdate.yaml
                - type: object
                  required:
                    - platformUserId
                    - userType
                  properties:
                    platformUserId:
                      type: string
                      description: Platform-specific user identifier
                      example: 9f84e0c2a72c4fa
                    userType:
                      type: string
                      enum: [INDIVIDUAL]
                      description: User type 
                    kycUrl:
                      type: string 
                      description: A kyc url to be shared with your individual customer if kyc needs to be completed 
                      example: "https://example.com/kyc"
            - title: Business Customer
              allOf:
                - $ref: ../../components/schemas/users/BusinessUserUpdate.yaml
                - type: object
                  required:
                    - platformUserId
                    - userType
                  properties:
                    platformUserId:
                      type: string
                      description: Platform-specific user identifier
                      example: 9f84e0c2a72c4fa
                    userType:
                      type: string
                      enum: [BUSINESS]
                      description: User type
                    kycUrl:
                      type: string 
                      description: A kyc url to be shared with your business customer if kyc needs to be completed 
                      example: "https://example.com/kyc"
          discriminator:
            propertyName: userType
            mapping:
              INDIVIDUAL: ../../components/schemas/users/IndividualUserUpdate.yaml
              BUSINESS: ../../components/schemas/users/BusinessUserUpdate.yaml
        examples:
          individualUserWithUmaAddress:
            summary: Create individual customer with UMA address, including deposit bank account information.
            value:
              umaAddress: $jane.doe@uma.domain.com
              platformUserId: 7b3c5a89d2f1e0
              userType: INDIVIDUAL
              fullName: Jane Doe
              birthDate: '1992-03-25'
              address:
                line1: 123 Pine Street
                line2: Unit 501
                city: Seattle
                state: WA
                postalCode: '98101'
                country: US
              bankAccountInfo:
                accountType: US_ACCOUNT
                accountNumber: '12345678901'
                routingNumber: '123456789'
                accountCategory: CHECKING
                bankName: Chase Bank
                platformAccountId: chase_primary_1234
          individualUserWithoutUmaAddress:
            summary: Create individual customer without UMA address (will be generated)
            value:
              platformUserId: 7b3c5a89d2f1e0
              userType: INDIVIDUAL
              fullName: John Smith
              birthDate: '1985-06-10'
              address:
                line1: 456 Oak Avenue
                city: Portland
                state: OR
                postalCode: '97201'
                country: US
          businessUser:
            summary: Create business customer example
            value:
              platformUserId: 6e4d2c0b8a9f3
              userType: BUSINESS
              businessInfo:
                legalName: Acme Corporation
                registrationNumber: BRN-456789123
                taxId: EIN-987123456
              address:
                line1: 400 Commerce Way
                city: Austin
                state: TX
                postalCode: '78701'
                country: US
  responses:
    '201':
      description: Customer created successfully
      content:
        application/json:
          schema:
            oneOf:
              - title: Individual Customer
                $ref: ../../components/schemas/users/IndividualUser.yaml
              - title: Business Customer
                $ref: ../../components/schemas/users/BusinessUser.yaml
            discriminator:
              propertyName: userType
              mapping:
                INDIVIDUAL: ../../components/schemas/users/IndividualUser.yaml
                BUSINESS: ../../components/schemas/users/BusinessUser.yaml
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error400.yaml
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error401.yaml
    '409':
      description: Conflict - Customer with the UMA address already exists
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error409.yaml
    '500':
      description: Internal service error
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error500.yaml
    '501':
      description: Not implemented
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error501.yaml
get:
  summary: List customers
  description: >
    Retrieve a list of customers with optional filtering parameters. Returns all
    customers that match

    the specified filters. If no filters are provided, returns all customers
    (paginated).
  operationId: listUsers
  tags:
    - Customers
  security:
    - BasicAuth: []
  parameters:
    - name: platformUserId
      in: query
      description: Filter by platform-specific user identifier
      required: false
      schema:
        type: string
    - name: umaAddress
      in: query
      description: Filter by uma address
      required: false
      schema:
        type: string
    - name: userType
      in: query
      description: Filter by user type
      required: false
      schema:
        $ref: ../../components/schemas/users/UserType.yaml
    - name: createdAfter
      in: query
      description: Filter customers created after this timestamp (inclusive)
      required: false
      schema:
        type: string
        format: date-time
    - name: createdBefore
      in: query
      description: Filter customers created before this timestamp (inclusive)
      required: false
      schema:
        type: string
        format: date-time
    - name: updatedAfter
      in: query
      description: Filter customers updated after this timestamp (inclusive)
      required: false
      schema:
        type: string
        format: date-time
    - name: updatedBefore
      in: query
      description: Filter customers updated before this timestamp (inclusive)
      required: false
      schema:
        type: string
        format: date-time
    - name: limit
      in: query
      description: Maximum number of results to return (default 20, max 100)
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    - name: cursor
      in: query
      description: Cursor for pagination (returned from previous request)
      required: false
      schema:
        type: string
    - name: isIncludingDeleted
      in: query
      description: Whether to include deleted customers in the results. Default is false.
      required: false
      schema:
        type: boolean
  responses:
    '200':
      description: Successful operation
      content:
        application/json:
          schema:
            type: object
            required:
              - data
              - hasMore
            properties:
              data:
                type: array
                description: List of customers matching the filter criteria
                items:
                  oneOf:
                    - title: Individual Customer
                      $ref: ../../components/schemas/users/IndividualUser.yaml
                    - title: Business Customer
                      $ref: ../../components/schemas/users/BusinessUser.yaml
                  discriminator:
                    propertyName: userType
                    mapping:
                      INDIVIDUAL: ../../components/schemas/users/IndividualUser.yaml
                      BUSINESS: ../../components/schemas/users/BusinessUser.yaml
              hasMore:
                type: boolean
                description: Indicates if more results are available beyond this page
              nextCursor:
                type: string
                description: >-
                  Cursor to retrieve the next page of results (only present if
                  hasMore is true)
              totalCount:
                type: integer
                description: >-
                  Total number of customers matching the criteria (excluding
                  pagination)
    '400':
      description: Bad request - Invalid parameters
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error400.yaml
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error401.yaml
    '500':
      description: Internal service error
      content:
        application/json:
          schema:
            $ref: ../../components/schemas/errors/Error500.yaml
