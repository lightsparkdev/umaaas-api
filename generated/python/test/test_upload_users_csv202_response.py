# coding: utf-8

"""
    UMA as a Service (UMAaaS) API

    API for managing global payments to and from UMA addresses.  This service facilitates cross-currency financial transactions using simple human-readable UMA addresses. 

    The version of the OpenAPI document: 1.0.0
    Contact: support@lightspark.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from umaaas_api.models.upload_users_csv202_response import UploadUsersCsv202Response

class TestUploadUsersCsv202Response(unittest.TestCase):
    """UploadUsersCsv202Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UploadUsersCsv202Response:
        """Test UploadUsersCsv202Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UploadUsersCsv202Response`
        """
        model = UploadUsersCsv202Response()
        if include_optional:
            return UploadUsersCsv202Response(
                job_id = '',
                status = 'PENDING',
                validation_summary = umaaas_api.models.upload_users_csv_202_response_validation_summary.uploadUsersCsv_202_response_validationSummary(
                    total_rows = 56, 
                    valid_rows = 56, 
                    invalid_rows = 56, 
                    errors = [
                        umaaas_api.models.upload_users_csv_202_response_validation_summary_errors_inner.uploadUsersCsv_202_response_validationSummary_errors_inner(
                            row = 56, )
                        ], )
            )
        else:
            return UploadUsersCsv202Response(
                job_id = '',
                status = 'PENDING',
        )
        """

    def testUploadUsersCsv202Response(self):
        """Test UploadUsersCsv202Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
