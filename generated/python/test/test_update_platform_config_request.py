# coding: utf-8

"""
    UMA as a Service (UMAaaS) API

    API for managing global payments to and from UMA addresses.  This service facilitates cross-currency financial transactions using simple human-readable UMA addresses. 

    The version of the OpenAPI document: 2025-05-15
    Contact: support@lightspark.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from umaaas_api.models.update_platform_config_request import UpdatePlatformConfigRequest

class TestUpdatePlatformConfigRequest(unittest.TestCase):
    """UpdatePlatformConfigRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdatePlatformConfigRequest:
        """Test UpdatePlatformConfigRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdatePlatformConfigRequest`
        """
        model = UpdatePlatformConfigRequest()
        if include_optional:
            return UpdatePlatformConfigRequest(
                uma_domain = 'mycompany.com',
                webhook_endpoint = 'https://api.mycompany.com/webhooks/uma',
                supported_currencies = [
                    umaaas_api.models.platform_currency_config.PlatformCurrencyConfig(
                        currency_code = 'USD', 
                        min_amount = 100, 
                        max_amount = 1000000, 
                        required_counterparty_fields = [{name=FULL_NAME, mandatory=true}, {name=DATE_OF_BIRTH, mandatory=true}, {name=NATIONALITY, mandatory=true}], 
                        uma_provider_required_user_fields = [NATIONALITY, DATE_OF_BIRTH], )
                    ]
            )
        else:
            return UpdatePlatformConfigRequest(
        )
        """

    def testUpdatePlatformConfigRequest(self):
        """Test UpdatePlatformConfigRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
