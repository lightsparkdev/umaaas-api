# coding: utf-8

"""
    UMA as a Service (UMAaaS) API

    API for managing global payments to and from UMA addresses.  This service facilitates cross-currency financial transactions using simple human-readable UMA addresses. 

    The version of the OpenAPI document: 2025-05-15
    Contact: support@lightspark.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from umaaas_api.models.invitation_claimed_webhook import InvitationClaimedWebhook

class TestInvitationClaimedWebhook(unittest.TestCase):
    """InvitationClaimedWebhook unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InvitationClaimedWebhook:
        """Test InvitationClaimedWebhook
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InvitationClaimedWebhook`
        """
        model = InvitationClaimedWebhook()
        if include_optional:
            return InvitationClaimedWebhook(
                invitation = umaaas_api.models.uma_invitation.UmaInvitation(
                    code = '019542f5', 
                    created_at = '2023-09-01T14:30:00Z', 
                    claimed_at = '2023-09-01T14:30:00Z', 
                    url = 'https://uma.me/i/019542f5', 
                    expires_at = '2023-09-01T14:30:00Z', 
                    inviter_uma = '$inviter@uma.domain', 
                    invitee_uma = '$invitee@uma.domain', 
                    status = 'PENDING', 
                    amount_to_send = umaaas_api.models.currency_amount.CurrencyAmount(
                        amount = 12550, 
                        currency = umaaas_api.models.currency.Currency(
                            code = 'USD', 
                            name = 'United States Dollar', 
                            symbol = '$', 
                            decimals = 2, ), ), ),
                timestamp = '2023-08-15T14:32:00Z',
                webhook_id = 'Webhook:019542f5-b3e7-1d02-0000-000000000008',
                type = 'INVITATION_CLAIMED'
            )
        else:
            return InvitationClaimedWebhook(
                invitation = umaaas_api.models.uma_invitation.UmaInvitation(
                    code = '019542f5', 
                    created_at = '2023-09-01T14:30:00Z', 
                    claimed_at = '2023-09-01T14:30:00Z', 
                    url = 'https://uma.me/i/019542f5', 
                    expires_at = '2023-09-01T14:30:00Z', 
                    inviter_uma = '$inviter@uma.domain', 
                    invitee_uma = '$invitee@uma.domain', 
                    status = 'PENDING', 
                    amount_to_send = umaaas_api.models.currency_amount.CurrencyAmount(
                        amount = 12550, 
                        currency = umaaas_api.models.currency.Currency(
                            code = 'USD', 
                            name = 'United States Dollar', 
                            symbol = '$', 
                            decimals = 2, ), ), ),
                timestamp = '2023-08-15T14:32:00Z',
                webhook_id = 'Webhook:019542f5-b3e7-1d02-0000-000000000008',
                type = 'INVITATION_CLAIMED',
        )
        """

    def testInvitationClaimedWebhook(self):
        """Test InvitationClaimedWebhook"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
