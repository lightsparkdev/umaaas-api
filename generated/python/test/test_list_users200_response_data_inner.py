# coding: utf-8

"""
    UMA as a Service (UMAaaS) API

    API for managing global payments to and from UMA addresses.  This service facilitates cross-currency financial transactions using simple human-readable UMA addresses. 

    The version of the OpenAPI document: 1.0.0
    Contact: support@lightspark.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from umaaas_api.models.list_users200_response_data_inner import ListUsers200ResponseDataInner

class TestListUsers200ResponseDataInner(unittest.TestCase):
    """ListUsers200ResponseDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListUsers200ResponseDataInner:
        """Test ListUsers200ResponseDataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListUsers200ResponseDataInner`
        """
        model = ListUsers200ResponseDataInner()
        if include_optional:
            return ListUsers200ResponseDataInner(
                id = 'User:019542f5-b3e7-1d02-0000-000000000001',
                uma_address = '$john.doe@uma.domain.com',
                platform_user_id = '9f84e0c2a72c4fa',
                user_type = 'INDIVIDUAL',
                created_at = '2023-07-21T17:32:28Z',
                updated_at = '2023-07-21T17:32:28Z',
                address = umaaas_api.models.address.Address(
                    line1 = '123 Main Street', 
                    line2 = 'Apt 4B', 
                    city = 'San Francisco', 
                    state = 'CA', 
                    postal_code = '94105', 
                    country = 'US', ),
                bank_account_info = umaaas_api.models.user_bank_account_info.UserBankAccountInfo(
                    account_type = 'CLABE', 
                    platform_account_id = 'acc_123456789', ),
                business_info = umaaas_api.models.business_user_all_of_business_info.BusinessUser_allOf_businessInfo(
                    legal_name = 'Acme Corporation, Inc.', 
                    registration_number = 'BRN-123456789', 
                    tax_id = 'EIN-987654321', )
            )
        else:
            return ListUsers200ResponseDataInner(
                uma_address = '$john.doe@uma.domain.com',
                platform_user_id = '9f84e0c2a72c4fa',
                user_type = 'INDIVIDUAL',
                address = umaaas_api.models.address.Address(
                    line1 = '123 Main Street', 
                    line2 = 'Apt 4B', 
                    city = 'San Francisco', 
                    state = 'CA', 
                    postal_code = '94105', 
                    country = 'US', ),
                bank_account_info = umaaas_api.models.user_bank_account_info.UserBankAccountInfo(
                    account_type = 'CLABE', 
                    platform_account_id = 'acc_123456789', ),
                business_info = umaaas_api.models.business_user_all_of_business_info.BusinessUser_allOf_businessInfo(
                    legal_name = 'Acme Corporation, Inc.', 
                    registration_number = 'BRN-123456789', 
                    tax_id = 'EIN-987654321', ),
        )
        """

    def testListUsers200ResponseDataInner(self):
        """Test ListUsers200ResponseDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
