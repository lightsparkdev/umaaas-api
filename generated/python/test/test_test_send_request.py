# coding: utf-8

"""
    UMA as a Service (UMAaaS) API

    API for managing global payments to and from UMA addresses.  This service facilitates cross-currency financial transactions using simple human-readable UMA addresses. 

    The version of the OpenAPI document: 1.0.0
    Contact: support@lightspark.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from umaaas_api.models.test_send_request import TestSendRequest

class TestTestSendRequest(unittest.TestCase):
    """TestSendRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TestSendRequest:
        """Test TestSendRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TestSendRequest`
        """
        model = TestSendRequest()
        if include_optional:
            return TestSendRequest(
                reference = 'UMA-Q12345-REF',
                amount = umaaas_api.models.currency_amount.CurrencyAmount(
                    amount = 12550, 
                    currency = umaaas_api.models.currency.Currency(
                        code = 'USD', 
                        name = 'United States Dollar', 
                        symbol = '$', 
                        decimals = 2, ), )
            )
        else:
            return TestSendRequest(
                reference = 'UMA-Q12345-REF',
                amount = umaaas_api.models.currency_amount.CurrencyAmount(
                    amount = 12550, 
                    currency = umaaas_api.models.currency.Currency(
                        code = 'USD', 
                        name = 'United States Dollar', 
                        symbol = '$', 
                        decimals = 2, ), ),
        )
        """

    def testTestSendRequest(self):
        """Test TestSendRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
