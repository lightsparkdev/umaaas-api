# coding: utf-8

"""
    UMA as a Service (UMAaaS) API

    API for managing global payments to and from UMA addresses.  This service facilitates cross-currency financial transactions using simple human-readable UMA addresses. 

    The version of the OpenAPI document: 1.0.0
    Contact: support@lightspark.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from umaaas_api.models.payment_instructions_bank_account_info import PaymentInstructionsBankAccountInfo

class TestPaymentInstructionsBankAccountInfo(unittest.TestCase):
    """PaymentInstructionsBankAccountInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaymentInstructionsBankAccountInfo:
        """Test PaymentInstructionsBankAccountInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaymentInstructionsBankAccountInfo`
        """
        model = PaymentInstructionsBankAccountInfo()
        if include_optional:
            return PaymentInstructionsBankAccountInfo(
                account_type = 'US_ACCOUNT',
                account_holder_name = 'John Doe',
                platform_account_id = 'acc_123456789',
                account_number = '123456789',
                routing_number = '987654321',
                account_category = 'CHECKING',
                bank_name = 'Deutsche Bank',
                pix_key = '55119876543210',
                pix_key_type = 'PHONE',
                iban = 'DE89370400440532013000',
                swift_bic = 'DEUTDEFF'
            )
        else:
            return PaymentInstructionsBankAccountInfo(
                account_type = 'US_ACCOUNT',
                account_number = '123456789',
                routing_number = '987654321',
                account_category = 'CHECKING',
                bank_name = 'Deutsche Bank',
                pix_key = '55119876543210',
                pix_key_type = 'PHONE',
                iban = 'DE89370400440532013000',
        )
        """

    def testPaymentInstructionsBankAccountInfo(self):
        """Test PaymentInstructionsBankAccountInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
