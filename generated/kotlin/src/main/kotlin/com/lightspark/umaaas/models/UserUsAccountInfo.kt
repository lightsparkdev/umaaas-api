/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.lightspark.umaaas.models

import com.lightspark.umaaas.models.BankAccountType
import com.lightspark.umaaas.models.UserBankAccountInfo

import com.fasterxml.jackson.annotation.JsonProperty

/**
 * 
 *
 * @param accountType 
 * @param accountNumber US bank account number
 * @param routingNumber ACH routing number (9 digits)
 * @param accountCategory Type of account (checking or savings)
 * @param platformAccountId Platform-specific identifier for this bank account. This optional field allows platforms to link bank accounts to their internal account systems. The value can be any string that helps identify the account in your system (e.g. database IDs, custom references, etc.).  This field is particularly useful when: - Tracking multiple bank accounts for the same user - Linking accounts to internal accounting systems - Maintaining consistency between UMAaaS and your platform's account records 
 * @param bankName Name of the bank
 * @param accountHolderName Name of the account holder
 */


data class UserUsAccountInfo (

    @get:JsonProperty("accountType")
    override val accountType: BankAccountType,

    /* US bank account number */
    @get:JsonProperty("accountNumber")
    val accountNumber: kotlin.String,

    /* ACH routing number (9 digits) */
    @get:JsonProperty("routingNumber")
    val routingNumber: kotlin.String,

    /* Type of account (checking or savings) */
    @get:JsonProperty("accountCategory")
    val accountCategory: UserUsAccountInfo.AccountCategory,

    /* Platform-specific identifier for this bank account. This optional field allows platforms to link bank accounts to their internal account systems. The value can be any string that helps identify the account in your system (e.g. database IDs, custom references, etc.).  This field is particularly useful when: - Tracking multiple bank accounts for the same user - Linking accounts to internal accounting systems - Maintaining consistency between UMAaaS and your platform's account records  */
    @get:JsonProperty("platformAccountId")
    override val platformAccountId: kotlin.String? = null,

    /* Name of the bank */
    @get:JsonProperty("bankName")
    val bankName: kotlin.String? = null,

    /* Name of the account holder */
    @get:JsonProperty("accountHolderName")
    val accountHolderName: kotlin.String? = null

) : UserBankAccountInfo {

    /**
     * Type of account (checking or savings)
     *
     * Values: CHECKING,SAVINGS
     */
    enum class AccountCategory(val value: kotlin.String) {
        @JsonProperty(value = "CHECKING") CHECKING("CHECKING"),
        @JsonProperty(value = "SAVINGS") SAVINGS("SAVINGS");
    }

}

