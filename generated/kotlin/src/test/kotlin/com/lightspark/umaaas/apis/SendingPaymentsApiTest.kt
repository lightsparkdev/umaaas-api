/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.lightspark.umaaas.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.lightspark.umaaas.apis.SendingPaymentsApi
import com.lightspark.umaaas.models.CreateQuote422Response
import com.lightspark.umaaas.models.CreateQuoteRequest
import com.lightspark.umaaas.models.Error
import com.lightspark.umaaas.models.LookupUma200Response
import com.lightspark.umaaas.models.Quote

class SendingPaymentsApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of SendingPaymentsApi
        //val apiInstance = SendingPaymentsApi()

        // to test createQuote
        should("test createQuote") {
            // uncomment below to test createQuote
            //val createQuoteRequest : CreateQuoteRequest = {"lookupId":"LookupRequest:019542f5-b3e7-1d02-0000-000000000009","sendingCurrencyCode":"USD","receivingCurrencyCode":"EUR","lockedCurrencySide":"SENDING","lockedCurrencyAmount":1000,"description":"Payment for invoice #1234"} // CreateQuoteRequest | 
            //val result : Quote = apiInstance.createQuote(createQuoteRequest)
            //result shouldBe ("TODO")
        }

        // to test getQuoteById
        should("test getQuoteById") {
            // uncomment below to test getQuoteById
            //val quoteId : kotlin.String = quoteId_example // kotlin.String | ID of the quote to retrieve
            //val result : Quote = apiInstance.getQuoteById(quoteId)
            //result shouldBe ("TODO")
        }

        // to test lookupUma
        should("test lookupUma") {
            // uncomment below to test lookupUma
            //val receiverUmaAddress : kotlin.String = receiverUmaAddress_example // kotlin.String | UMA address of the intended recipient
            //val senderUmaAddress : kotlin.String = senderUmaAddress_example // kotlin.String | UMA address of the sender (optional if userId is provided)
            //val userId : kotlin.String = userId_example // kotlin.String | System ID of the sender (optional if senderUmaAddress is provided)
            //val result : LookupUma200Response = apiInstance.lookupUma(receiverUmaAddress, senderUmaAddress, userId)
            //result shouldBe ("TODO")
        }

    }
}
