/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.lightspark.umaaas.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.lightspark.umaaas.models.CreateQuoteRequest
import com.lightspark.umaaas.models.QuoteLockSide

class CreateQuoteRequestTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CreateQuoteRequest
        //val modelInstance = CreateQuoteRequest()

        // to test the property `lookupId` - Unique identifier for the prior receiver uma address lookup request.
        should("test lookupId") {
            // uncomment below to test the property
            //modelInstance.lookupId shouldBe ("TODO")
        }

        // to test the property `sendingCurrencyCode` - Currency code for the sending amount
        should("test sendingCurrencyCode") {
            // uncomment below to test the property
            //modelInstance.sendingCurrencyCode shouldBe ("TODO")
        }

        // to test the property `receivingCurrencyCode` - Currency code for the receiving amount
        should("test receivingCurrencyCode") {
            // uncomment below to test the property
            //modelInstance.receivingCurrencyCode shouldBe ("TODO")
        }

        // to test the property `lockedCurrencySide`
        should("test lockedCurrencySide") {
            // uncomment below to test the property
            //modelInstance.lockedCurrencySide shouldBe ("TODO")
        }

        // to test the property `lockedCurrencyAmount` - The amount to send/receive in the smallest unit of the locked currency (eg. cents). See `lockedCurrencySide` for more information.
        should("test lockedCurrencyAmount") {
            // uncomment below to test the property
            //modelInstance.lockedCurrencyAmount shouldBe ("TODO")
        }

        // to test the property `description` - Optional description/memo for the payment
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `senderUserInfo` - Key-value pairs of information about the sender which was requested by the counterparty (recipient) institution. Any fields specified in `requiredPayerDataFields` from the response of the `/receiver/{receiverUmaAddress}` (lookupUma) endpoint MUST be provided here if they were requested. If the counterparty (recipient) institution did not request any information, this field can be omitted. 
        should("test senderUserInfo") {
            // uncomment below to test the property
            //modelInstance.senderUserInfo shouldBe ("TODO")
        }

    }
}
