/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.lightspark.umaaas.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.lightspark.umaaas.models.Transaction
import com.lightspark.umaaas.models.TransactionStatus
import com.lightspark.umaaas.models.TransactionType

class TransactionTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of Transaction
        //val modelInstance = Transaction()

        // to test the property `id` - Unique identifier for the transaction
        should("test id") {
            // uncomment below to test the property
            //modelInstance.id shouldBe ("TODO")
        }

        // to test the property `status`
        should("test status") {
            // uncomment below to test the property
            //modelInstance.status shouldBe ("TODO")
        }

        // to test the property `type`
        should("test type") {
            // uncomment below to test the property
            //modelInstance.type shouldBe ("TODO")
        }

        // to test the property `senderUmaAddress` - UMA address of the payment sender
        should("test senderUmaAddress") {
            // uncomment below to test the property
            //modelInstance.senderUmaAddress shouldBe ("TODO")
        }

        // to test the property `receiverUmaAddress` - UMA address of the payment recipient
        should("test receiverUmaAddress") {
            // uncomment below to test the property
            //modelInstance.receiverUmaAddress shouldBe ("TODO")
        }

        // to test the property `userId` - System ID of the user (sender for outgoing, recipient for incoming)
        should("test userId") {
            // uncomment below to test the property
            //modelInstance.userId shouldBe ("TODO")
        }

        // to test the property `platformUserId` - Platform-specific ID of the user (sender for outgoing, recipient for incoming)
        should("test platformUserId") {
            // uncomment below to test the property
            //modelInstance.platformUserId shouldBe ("TODO")
        }

        // to test the property `settledAt` - When the payment was or will be settled
        should("test settledAt") {
            // uncomment below to test the property
            //modelInstance.settledAt shouldBe ("TODO")
        }

        // to test the property `createdAt` - When the transaction was created
        should("test createdAt") {
            // uncomment below to test the property
            //modelInstance.createdAt shouldBe ("TODO")
        }

        // to test the property `description` - Optional memo or description for the payment
        should("test description") {
            // uncomment below to test the property
            //modelInstance.description shouldBe ("TODO")
        }

        // to test the property `counterpartyInformation` - Additional information about the counterparty, if available
        should("test counterpartyInformation") {
            // uncomment below to test the property
            //modelInstance.counterpartyInformation shouldBe ("TODO")
        }

    }
}
