/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.lightspark.umaaas.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.lightspark.umaaas.models.CreateInvitationRequest

class CreateInvitationRequestTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of CreateInvitationRequest
        //val modelInstance = CreateInvitationRequest()

        // to test the property `inviterUma` - The UMA address of the user creating the invitation
        should("test inviterUma") {
            // uncomment below to test the property
            //modelInstance.inviterUma shouldBe ("TODO")
        }

        // to test the property `amountToSend` - An amount to send (in the smallest unit of the user's currency) to the invitee when the invitation is claimed. This is optional and if not provided, the invitee will not receive any amount. Note that the actual sending of the amount must be done by the inviter platform once the INVITATION_CLAIMED webhook is received. If the inviter platform either does not send the payment or the payment fails, the invitee will not receive this amount. This field is primarily used for display purposes on the claiming side of the invitation. 
        should("test amountToSend") {
            // uncomment below to test the property
            //modelInstance.amountToSend shouldBe ("TODO")
        }

        // to test the property `expiresAt` - When the invitation expires (if at all)
        should("test expiresAt") {
            // uncomment below to test the property
            //modelInstance.expiresAt shouldBe ("TODO")
        }

    }
}
