/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.lightspark.umaaas.models

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.lightspark.umaaas.models.PlatformCurrencyConfig
import com.lightspark.umaaas.models.CounterpartyFieldDefinition
import com.lightspark.umaaas.models.UserInfoFieldName

class PlatformCurrencyConfigTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of PlatformCurrencyConfig
        //val modelInstance = PlatformCurrencyConfig()

        // to test the property `currencyCode` - Three-letter currency code (ISO 4217)
        should("test currencyCode") {
            // uncomment below to test the property
            //modelInstance.currencyCode shouldBe ("TODO")
        }

        // to test the property `minAmount` - Minimum amount that can be sent in the smallest unit of this currency
        should("test minAmount") {
            // uncomment below to test the property
            //modelInstance.minAmount shouldBe ("TODO")
        }

        // to test the property `maxAmount` - Maximum amount that can be sent in the smallest unit of this currency
        should("test maxAmount") {
            // uncomment below to test the property
            //modelInstance.maxAmount shouldBe ("TODO")
        }

        // to test the property `requiredCounterpartyFields` - List of fields which the platform requires from the counterparty institutions about counterparty users. Platforms can set mandatory to false if the platform does not require the field, but would like to have it available. Some fields may be required by the underlying UMA provider.
        should("test requiredCounterpartyFields") {
            // uncomment below to test the property
            //modelInstance.requiredCounterpartyFields shouldBe ("TODO")
        }

        // to test the property `umaProviderRequiredUserFields` - List of user info field names that are required by the underlying UMA provider when creating a user for this currency. These fields must be supplied when creating or updating a user if this currency is intended to be used by that user. If no fields are required, this field is omitted.
        should("test umaProviderRequiredUserFields") {
            // uncomment below to test the property
            //modelInstance.umaProviderRequiredUserFields shouldBe ("TODO")
        }

    }
}
