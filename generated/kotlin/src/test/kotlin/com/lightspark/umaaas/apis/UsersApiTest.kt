/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.lightspark.umaaas.apis

import io.kotlintest.shouldBe
import io.kotlintest.specs.ShouldSpec

import com.lightspark.umaaas.apis.UsersApi
import com.lightspark.umaaas.models.BulkUserImportJob
import com.lightspark.umaaas.models.Error
import com.lightspark.umaaas.models.ListUsers200Response
import com.lightspark.umaaas.models.UpdateUserByIdRequest
import com.lightspark.umaaas.models.UploadUsersCsv202Response
import com.lightspark.umaaas.models.User
import com.lightspark.umaaas.models.UserType

class UsersApiTest : ShouldSpec() {
    init {
        // uncomment below to create an instance of UsersApi
        //val apiInstance = UsersApi()

        // to test createUser
        should("test createUser") {
            // uncomment below to test createUser
            //val user : User = {"umaAddress":"$jane.doe@uma.domain.com","platformUserId":"7b3c5a89d2f1e0","userType":"INDIVIDUAL","fullName":"Jane Doe","dateOfBirth":"1992-03-25","address":{"line1":"123 Pine Street","line2":"Unit 501","city":"Seattle","state":"WA","postalCode":"98101","country":"US"},"bankAccountInfo":{"accountType":"US_ACCOUNT","accountNumber":"12345678901","routingNumber":"123456789","accountCategory":"CHECKING","bankName":"Chase Bank","platformAccountId":"chase_primary_1234"}} // User | 
            //val result : User = apiInstance.createUser(user)
            //result shouldBe ("TODO")
        }

        // to test deleteUserById
        should("test deleteUserById") {
            // uncomment below to test deleteUserById
            //val userId : kotlin.String = userId_example // kotlin.String | System-generated unique user identifier
            //val result : User = apiInstance.deleteUserById(userId)
            //result shouldBe ("TODO")
        }

        // to test getBulkUserImportJob
        should("test getBulkUserImportJob") {
            // uncomment below to test getBulkUserImportJob
            //val jobId : kotlin.String = jobId_example // kotlin.String | ID of the bulk import job to retrieve
            //val result : BulkUserImportJob = apiInstance.getBulkUserImportJob(jobId)
            //result shouldBe ("TODO")
        }

        // to test getUserById
        should("test getUserById") {
            // uncomment below to test getUserById
            //val userId : kotlin.String = userId_example // kotlin.String | System-generated unique user identifier
            //val result : User = apiInstance.getUserById(userId)
            //result shouldBe ("TODO")
        }

        // to test listUsers
        should("test listUsers") {
            // uncomment below to test listUsers
            //val platformUserId : kotlin.String = platformUserId_example // kotlin.String | Filter by platform-specific user identifier
            //val umaAddress : kotlin.String = umaAddress_example // kotlin.String | Filter by UMA address
            //val userType : UserType =  // UserType | Filter by user type
            //val createdAfter : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Filter users created after this timestamp (inclusive)
            //val createdBefore : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Filter users created before this timestamp (inclusive)
            //val updatedAfter : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Filter users updated after this timestamp (inclusive)
            //val updatedBefore : java.time.OffsetDateTime = 2013-10-20T19:20:30+01:00 // java.time.OffsetDateTime | Filter users updated before this timestamp (inclusive)
            //val limit : kotlin.Int = 56 // kotlin.Int | Maximum number of results to return (default 20, max 100)
            //val cursor : kotlin.String = cursor_example // kotlin.String | Cursor for pagination (returned from previous request)
            //val isIncludingDeleted : kotlin.Boolean = true // kotlin.Boolean | Whether to include deleted users in the results. Default is false.
            //val result : ListUsers200Response = apiInstance.listUsers(platformUserId, umaAddress, userType, createdAfter, createdBefore, updatedAfter, updatedBefore, limit, cursor, isIncludingDeleted)
            //result shouldBe ("TODO")
        }

        // to test updateUserById
        should("test updateUserById") {
            // uncomment below to test updateUserById
            //val userId : kotlin.String = userId_example // kotlin.String | System-generated unique user identifier
            //val updateUserByIdRequest : UpdateUserByIdRequest = {"userType":"INDIVIDUAL","fullName":"John Smith","dateOfBirth":"1985-06-15","address":{"line1":"456 Market St","city":"San Francisco","state":"CA","postalCode":"94103","country":"US"},"bankAccountInfo":{"accountType":"US_ACCOUNT","accountNumber":"11122233344","routingNumber":"111222333","accountCategory":"CHECKING","bankName":"Wells Fargo","platformAccountId":"wf_checking_9012"}} // UpdateUserByIdRequest | 
            //val result : User = apiInstance.updateUserById(userId, updateUserByIdRequest)
            //result shouldBe ("TODO")
        }

        // to test uploadUsersCsv
        should("test uploadUsersCsv") {
            // uncomment below to test uploadUsersCsv
            //val file : java.io.File = BINARY_DATA_HERE // java.io.File | CSV file containing user information
            //val webhookUrl : java.net.URI = webhookUrl_example // java.net.URI | Optional webhook URL for job status updates. If not provided, the platform's default webhook URL will be used.
            //val result : UploadUsersCsv202Response = apiInstance.uploadUsersCsv(file, webhookUrl)
            //result shouldBe ("TODO")
        }

    }
}
